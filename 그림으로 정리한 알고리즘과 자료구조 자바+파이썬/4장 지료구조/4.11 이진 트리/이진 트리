1. 개요
1-1. 이진 트리 구조 알아보기
이진 트리 구조(Binary Tree) : 트리 자료구조 중에서 모든 노드가 최대 2개의 자식 노드를 가질 수 있는 구조
왼쪽 서브 트리의 값은 루트의 값보다 작고,
오른쪽 서브 트리의 값은 루트의 값보다 큰 값을 가지도록 구성함

주로 빠른 검색이 필요한 곳에서 사용하므로, '이진 검색 트리'라고도 한다.

1-2. 이진 트리 생성

1-3. 이진 트리 모양에 따른 분류
모양에 따라 3가지로 분류할 수 있다.
- 포화 이진 트리(Full Binary Tree) : 레벨의 노드가 꽉 차 있는 트리
- 완전 이진 트리(Complete Binary Tree) : 마지막 레벨 전까지는 노드가 꽉 차 있고, 마지막 레벨의 왼쪽에서 오른쪽으로 노드가 채워져 있는 트리(마지막 레벨이 다 채워지지 않아도 됨)
- 편향 이진 트리(Skewed Binary Tree) : 왼쪽 혹은 오른쪽 서브 트리만을 가지는 트리



2. 사용 및 응용
2-1. 이진 트리 사용 알고리즘(입력, 검색, 삭제)
※ 이진 트리는 잘못 구성되면 한쪽에 노드가 몰리는 현상이 발생할 수 있다.

2-2. 이진 트리 응용 사례 및 구현 방법
- 이진 트리를 수식 표현에 사용하는 경우
컴파일러와 같은 프로그램
로직을 구성하면서 사용자가 입력한 정보를 관리하는 방식으로, 이진 트리를 사용하는 경우가 있음. : '수식 트리'

- 이진 트리를 컴퓨터에서 구현하는 방식
순차 자료구조 방식
연결 자료구조 방식